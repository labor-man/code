
远程引用是对远程仓库的引用（指针），包括分支、标签等。

git ls-remote <remote>
获得远程仓库的引用完整列表(HEAD、分支、tags)

git remote show <remote>
获取远程仓库的信息

----------------------------------------------------

抓取

本地仓库 git clone后/

		[origin/master]		
            ⬇
C0 ⬅ C1 ⬅ C2
			⬆
   	     [master]

master分支提交后/

		[origin/master]		
            ⬇
C0 ⬅ C1 ⬅ C2 ⬅ C3 ⬅ C4
					   ⬆
   	                [master]

git fetch <remote>后/

		         [origin/master]		
                       ⬇   
C0 ⬅ C1 ⬅ C2 ⬅ C5 ⬅ C6 
			  ↖
				C3 ⬅ C4
					   ⬆
   	                [master]

----------------------------------------------------

推送

git push <remote> <branch>
推送本地的<branch>分支更新远程仓库的<branch>分支

git push <remote> <branch-a>:<branch-b>
推送本地的<branch-a>分支更新远程仓库的<branch-b>分支

git fetch <remote>
本地生成所有远程分支

git checkout -b <branch-a> <remote>/<branch-b>
创建本地分支<branch-a>，合并远程分支<branch-b>

----------------------------------------------------

跟踪分支:设置跟踪分支方便使用 拉取+合并 操作

设置

git checkout -b <new-local-branch> <remote>/<remote-branch>
创建新分支<new-local-branch>并跟踪远程分支<remote-branch>

git checkout --track <remote>/<remote-branch>
如果本地没有与远程仓库<remote-branch>同名的分支，会创建分支并跟踪

git checkout <remote-branch>
如果本地没有与远程仓库<remote-branch>同名的分支，会创建分支并跟踪

git branch -u <remote>/<branch>
重新设置当前分支的跟踪分支

----------------------------------------------------

上游快捷方式

git merge @{u}
合并上游分支,@{u}代表上游分支

----------------------------------------------------

查看跟踪分支

git branch -vv

----------------------------------------------------

更新远程分支

git fetch --all

----------------------------------------------------

拉去

git pull
从远程分支抓取数据然后尝试合并那个远程分支

----------------------------------------------------

删除远程分支

git push <remote> --delete <branch>


原始：
		             [master]		
                       ⬇   
C0 ⬅ C1 ⬅ C2 ⬅ C5 ⬅ C6 
			  ↖
				C3 ⬅ C4
					  ⬆
   	             [experiment]


merge:
-in master
git merge experiment
		                 [master]		
                            ⬇   
C0 ⬅ C1 ⬅ C2 ⬅ C5 ⬅ C6 ⬅ C7 
			  ↖             ↙
				C3   ⬅   C4
					      ⬆
   	                 [experiment]

git merge experiment

rebase:
-in experiment
git rebase master

		            [master    [experiment]	
                       ⬇           ⬇
C0 ⬅ C1 ⬅ C2 ⬅ C5 ⬅ C6 ⬅ C3' ⬅ C4'
		- - - - - - - - - - - - -
			  ↖             ↙
				C3   ⬅   C4
   	    - - - - - - - - - - - - -             

(虚线包围的历史将消失)

原理：它的原理是首先找到这两个分支（即当前分支 experiment、变基操作的目标基底分支 master） 的最近共同祖先 C2，然后对比当前分支相对于该祖先的历次提交，提取相应的修改并存为临时文件， 然后将当前分支指向目标基底 C3, 最后以此将之前另存为临时文件的修改依序应用。

git checkout master
git merge experiment
进行快进合并

----------------------------------------------------

注意：

合并保留记录了“实际发生了什么”
变基方便了后来的读者阅读“项目过程中发生的事”

只对尚未推送或分享给别人的本地修改执行变基操作清理历史， 从不对已推送至别处的提交执行变基操作，这样，你才能享受到两种方式带来的便利。




查看-------------------------------------------------

git log

格式化-------------------------------------------------

附带统计信息
git log --stat

附带提交内容
git log --patch

附带图
git log --graph

简单化
git log --oneline

使用预设格式
git log --pretty=oneline（子选项有short full fuller）

自定义格式
git log --pretty=format:"%h - %an, %ar : %s"
常用选项：https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E6%9F%A5%E7%9C%8B%E6%8F%90%E4%BA%A4%E5%8E%86%E5%8F%B2#pretty_format

筛选-------------------------------------------------

(带参数的选项，如果是单破折号只能接 空格 + 参数， 如果是双破折号可以接等号或空格)
（指定多个同类搜索条件，会输出任意匹配的提交，添加 --all-match 选项， 会筛选所有满足条件的提交）

--no-merges	筛掉合并提交

-<n>	仅显示最近的 n 条提交。

--since, --after	仅显示指定时间之后的提交。

--until, --before	仅显示指定时间之前的提交。

--author	仅显示作者匹配指定字符串的提交。

--committer	仅显示提交者匹配指定字符串的提交。

--grep	仅显示提交说明中包含指定字符串的提交。

-S	仅显示添加或删除内容匹配指定字符串的提交。

-- <path> 指定路径(最后面)

打印结果说明-------------------------------------------------
@@ -55,4 +55,10 @@ 
用于说明下面的文本范围，-+表达式变动前和后，'m,n'表示从第m行开始连续显示了n行

例子-------------------------------------------------

查看Li在2008年10月除了合并提交之外的哪些提交修改了测试文件
git log --since="2008-10-01" --before="2008-11-01" --no-merges -- t/

自定义格式plus
git log --pretty=format:"%h - %an, %ar : %s" --graph




